services:

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    restart: always
    ports:
      - "8080:8080"
    command:
      - start-dev
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - ostock-network

  ostock-database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ostock_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./.db/init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./.db/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ostock-network

  pga-admin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.edu
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./.db/servers.json:/pgadmin4/servers.json
    depends_on:
      ostock-database:
        condition: service_healthy
    networks:
      - ostock-network

  config-server:
    image: ostock/config-server:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    healthcheck:
      test: ["CMD-SHELL", "busybox nc -w 2 localhost 8071 < /dev/null"]
      interval: 5s
      timeout: 2s
      retries: 20
    networks:
      - ostock-network

  eureka-server:
    image: ostock/eureka-server:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      CONFIG_SERVER_URI: http://config-server:8071
      CONFIG_SERVER_PORT: 8071
    depends_on:
      ostock-database:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - ostock-network

  gateway-server:
    image: ostock/gateway-server:0.0.1-SNAPSHOT
    ports:
      - "8072:8072"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      CONFIG_SERVER_URI: http://config-server:8071
      CONFIG_SERVER_PORT: 8071
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
      keycloak:
        condition: service_started
    networks:
      - ostock-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ostock-network

  kafka-server:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: orgChangeTopic:1:1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always
    depends_on:
      - zookeeper
    networks:
      - ostock-network

  licensing-service:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    ports:
      - "8180:8180"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      CONFIG_SERVER_URI: http://config-server:8071
      CONFIG_SERVER_PORT: 8071
      DATABASESERVER_PORT: 5432
    depends_on:
      ostock-database:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
      keycloak:
        condition: service_started
    networks:
      - ostock-network

  organization-service:
    image: ostock/organization-service:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      CONFIG_SERVER_URI: http://config-server:8071
      CONFIG_SERVER_PORT: 8071
      DATABASESERVER_PORT: 5432
    depends_on:
      ostock-database:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - ostock-network

networks:
  ostock-network:
    driver: bridge

volumes:
  keycloak_data:
  postgres_data:
  pgadmin_data: