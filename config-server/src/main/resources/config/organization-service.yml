info:
  app:
    name: Organization Service
    description: Organization Service for Microservices Application
    version: 0.0.1-SNAPSHOT
  java:
    version: ${java.version}
  spring:
    framework:
      version: ${spring-framework.version}
    boot:
      version: ${spring-boot.version}

example:
  property: I AM THE DEFAULT

ostock:
  client-name: ds-ostock

spring:
  datasource:
    testWhileIdle: true
    validationQuery: SELECT 1
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    database: POSTGRESQL
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/spmia-realm
          jwk-set-uri: http://keycloak:8080/realms/spmia-realm/protocol/openid-connect/certs
  cloud:
    function:
      definition: orgChange
    stream:
      kafka:
        binder:
          brokers: kafka-server
      bindings:
        orgChange-out-0:
          destination: orgChangeEvent
          content-type: application/json

server:
  port: 8081

eureka:
  instance:
    preferIpAddress: true
    statusPageUrl: http://localhost:${server.port}/actuator/info
    healthCheckUrl: http://localhost:${server.port}/actuator/health
    homePageUrl: http://localhost:${server.port}/
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URI:http://eureka-server:8070/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    enabled: true
    show-details: always
  env:
    enabled: true
    show-values: always
  info:
    enabled: true
    show-details: always
  tracing:
    enabled: true
    sampling:
      probability: 1.0


logging:
  level:
    root: DEBUG

