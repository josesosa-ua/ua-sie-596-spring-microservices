plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

ext {
    set('springCloudVersion', "2024.0.1")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    mockitoAgent {
        extendsFrom testImplementation
        canBeResolved = true
        canBeConsumed = false
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    jvmArgs += "-javaagent:${configurations.mockitoAgent.find { it.name.startsWith('mockito-core') }.absolutePath}"
    jvmArgs += "-Xshare:off"
}

tasks.named('docker') {
    dependsOn bootJar
}

docker {
    name "${project.team}/${project.name}:${project.version}"
    files tasks.bootJar.outputs.files
    buildArgs(['JAR_FILE': "${tasks.bootJar.archiveFileName.get()}"])
    dockerfile file('Dockerfile')
}